title: PageBasedPagination
type: object

components:
  
  schemas:
    PageBasedPaginationBody:
      description: Used to enable paging and within the body payload of collections
      type: object
      properties:
        page:
          description: Pagination properties
          type: object
          properties:
            size:
              description: The number of records per page
              type: integer
              example: 10
            number:
              description: The current page number
              type: integer
              example: 1
            total_pages:
              description: The total number of pages
              type: integer
              example: 10
            total_elements:
              description: The total number of records
              type: integer
          required:
            - size
            - number
            - total_pages
            - total_elements
      required:
          - page

  parameters:
    # Collections
    search:
      name: search
      description: An RSQL query. For more information see the [grammar and semantics](https://github.com/jirutka/rsql-parser#grammar-and-semantic) and related [examples](https://github.com/jirutka/rsql-parser#examples).
      in: query
      schema:
        type: string
    sort:
      name: sort
      description: |
        How the returned collection will be sorted. The string should be in the format `{property},{direction}`.

        - `property` is queryable field within the resource.
        - `direction` can be either `asc` for ascending or `desc` for descending.

        Examples:

        - `name,asc`
        - `name,desc`
        - `created_at,asc`
        - `created_at,desc`
      in: query
      schema:
        type: string
    sort_usage:
      name: sort
      description: |
        How the returned collection will be sorted. The string should be in the format `{property},{direction}`.

        - `property` is queryable field within the resource.
        - `direction` can be either `asc` for ascending or `desc` for descending.

        Examples:

        - `date,asc`
        - `date,desc`
      in: query
      schema:
        type: string
    sort_analytics:
      name: sort
      description: |
        How the returned collection will be sorted. The string should be in the format `{property},{direction}`.

        - `property` is queryable field within the resource.
        - `direction` can be either `asc` for ascending or `desc` for descending.

        Examples:

        - `date,asc`
        - `date,desc`
      in: query
      schema:
        type: string
    pageNumber:
      name: page
      description: The page number being requested
      in: query
      schema:
        type: integer
        example: 10
        default: 1
        minimum: 1
    pageSize:
      name: size
      description: The number of items to be returned for the page being requested
      in: query
      schema:
        type: integer
        example: 10
        default: 10
        minimum: 1
        maximum: 100
